<?php

/**
 * @file
 * AppDAL module
 */

/**
 * Implements hook_help().
 */
function appdal_help($path, $arg) {
	switch ($path) {
		case 'admin/help#appdal':
			$output = '<h3>' . t('About') . '</h3>';
			$output .= t('AppDAL module to manage the data for the mobile application.');
			return $output;	
		case 'admin/config/services/appdal':
      		return '<p>' . t('Configure the AppDAL.') . '</p>';
	}
}

/**
 * Implements hook_permission().
 */
function appdal_permission() {
  return array(
    'administer appdal manager' => array(
      'title' => t('Manage AppDAL'),
      'description' => t('Administer AppDAL.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function appdal_menu() {
	$items = array();
	
	$items['admin/config/services/appdal'] = array(
    	'title' => 'AppDAL',
    	'description' => 'Manage AppDAL',
    	'page callback' => 'drupal_get_form',
    	'page arguments' => array('appdal_configuration_form'),
    	'access arguments' => array('administer appdal manager'),
    	'type' => MENU_NORMAL_ITEM,
	    'weight' => 1,
    	'file' => 'appdal.admin.inc',
  	);
  	
  	return $items;
}

/**
 * Implements hook_info().
 */
function appdal_action_info() {
	return array(
		'appdal_custom_action' => array(
			'label' => t('Custom action for AppDAL'),
			'group' => t('AppDAL'),
			'base' => '',
			'type' => 'node',
			'configurable' => false,
			'triggers' => array('node_insert'),
		),
	);
}

/**
 * Function that will be executed when the appdal custom action is called.
 */
function appdal_custom_action($node, $context = array()) {
	$TYPE_SOLICITUD_ACCION = 'solicitud_accion';
	$ACTIONS = array('Agresi\u00f3n', 'Robo o asalto', 'Vigilancia Policial con C\u00e1maras',
		'Programa Seguridad Comunitaria', 'Venta de drogas', 'Pandillas', 'Policia de Proximidad');

	dpm($node, 'action');

	// Determine if the node type is 'Solicitud accion'	
	if ($node->type == $TYPE_SOLICITUD_ACCION) {
		$action_nid = $node->field_referencia_nodo['und'][0]['nid'];
		$action_node = node_load($action_nid);
		
		// Determine which action perform
		switch ($action_node->type) {
			case $ACTIONS[0]:
						
				break;
			case $ACTIONS[1]:
						
				break;
			case $ACTIONS[2]:
						
				break;
			case $ACTIONS[3]:
						
				break;
			case $ACTIONS[4]:
						
				break;
			case $ACTIONS[5]:
						
				break;
			case $ACTIONS[6]:
						
				break;
			default:
				break;
		}
	}
}